<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>odin</string>
	</array>
	<key>name</key>
	<string>Odin</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#len</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#compiler_keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function_name_head</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#struct</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#union</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#enum</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#foreign</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#using</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#assert</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#foreign_import_block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#foreign_import</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#package</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#modifier</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#return_type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#triple_slash_operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#math_operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#data_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_char</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>advnc_return_type</key>
		<dict>
			<key>begin</key>
			<string>(-&gt;)\s*\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.return.odin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.returned.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\^)*([^0-9]{1}\w*):(\w+)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.pointer.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.returned.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\^)*(\w+)</string>
				</dict>
			</array>
		</dict>
		<key>assert</key>
		<dict>
			<key>match</key>
			<string>assert</string>
			<key>name</key>
			<string>support.function.assert.odin</string>
		</dict>
		<key>basic_return_type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.return.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.pointer.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.returned.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(-&gt;)\s*(\^)*(\[\])*(\w+|\!)</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_multi</string>
				</dict>
			</array>
		</dict>
		<key>comment_doc_info</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.bold</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>markup.italic</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((@)*(INFO))\((.+)\)\s*:\s*(.*)</string>
		</dict>
		<key>comment_doc_paramter</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.italic.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>markup.bold.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>markup.other.var_name.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(-){1,}\s+(Parameter|parameter)\s+(\w+)\s*:</string>
		</dict>
		<key>comment_doc_returns</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.italic.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>markup.bold.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(-){1,}\s+(Returns|returns)\s*:</string>
		</dict>
		<key>comment_doc_todo</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.bold</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>markup.italic</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((@)*(TODO))\((.+)\)\s*:\s*(.*)</string>
		</dict>
		<key>comment_multi</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>comment</key>
			<string>This is brilliant!</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.odin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_multi</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_doc_info</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_doc_todo</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_doc_returns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_doc_paramter</string>
				</dict>
			</array>
		</dict>
		<key>comment_single</key>
		<dict>
			<key>match</key>
			<string>//(.*)</string>
			<key>name</key>
			<string>comment.line.double-slash.odin</string>
		</dict>
		<key>compiler_keywords</key>
		<dict>
			<key>match</key>
			<string>\#c_vararg</string>
			<key>name</key>
			<string>keyword.other.vararg.odin</string>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants_other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants_language</string>
				</dict>
			</array>
		</dict>
		<key>constant_const</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.number.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.uniqueness.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.other.constant.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)\s*(::)\s*((distinct|opaque)\s+){0,1}(\w+)(;)+</string>
		</dict>
		<key>constant_number</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.number.odin</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oct.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.uniqueness.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.odin</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.hex.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)\s*(::)\s*((distinct|opaque)\s+){0,1}((0(o)[0-8]+)|(0(x)[0-9A-Fa-f]*)|(([1-9]+[0-9]*)|(0)))(;)+</string>
		</dict>
		<key>constant_string</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.string.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.uniqueness.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.constant.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w*)\s*(::)\s*((distinct|opaque)\s*){0,1}(\"\w*\")</string>
		</dict>
		<key>constant_type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.string.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.uniqueness.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.other.type.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.proc.odin</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>storage.type.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w*)\s*(::)\s*((distinct|opaque)\s*){0,1}(#type)*\s+(proc)*(\w+)*(;)*</string>
		</dict>
		<key>constants_language</key>
		<dict>
			<key>match</key>
			<string>\b(false|true|nil)\b</string>
			<key>name</key>
			<string>constant.language.odin</string>
		</dict>
		<key>constants_other</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.any.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.uniqueness.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)\s*(::)\s*(distinct|opaque)*\s*(\w+)</string>
		</dict>
		<key>data_types</key>
		<dict>
			<key>match</key>
			<string>\b(\[\])*(bool|b8|b16|b32|b64|uint|uintptr|int|(u|i)8(le|be)*|(u|i)16(le|be)*|(u|i)32(le|be)*|(u|i)64(le|be)*|(u|i)128(le|be)*|f32|f64|complex64|complex128|rune|string|cstring|rawptr|typeid|any)\b</string>
			<key>name</key>
			<string>storage.type.all.odin</string>
		</dict>
		<key>enum</key>
		<dict>
			<key>begin</key>
			<string>(\w+)\s*(::)\s*(enum)\s*(\w*)\s*(\{)*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.any.odin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}((;))*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum_field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum_comma</string>
				</dict>
			</array>
		</dict>
		<key>enum_comma</key>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>keyword.operator.bound.odin</string>
		</dict>
		<key>enum_field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.enum.field.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)\s*((,)|(=\s*))*</string>
		</dict>
		<key>field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.name.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.comma.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([^ \t]+)\s*(,)</string>
		</dict>
		<key>field_and_type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.name.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.seperator.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.comma.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.all.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.all.odin</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Is fixed?</string>
			<key>match</key>
			<string>(\w+)\s*(\:)\s*((\w+)(,){1,}|(\#type))</string>
		</dict>
		<key>foreign</key>
		<dict>
			<key>begin</key>
			<string>(foreign)\s+([^ \t]+)\s+{</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.foreign.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.package.odin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}(;)*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>foreign_import</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.foreign.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.double_point.odin</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>3 = { name = 'entity.name.type.odin'; };</string>
			<key>match</key>
			<string>(foreign)\s+(import)\s+(\w+)*\s*(\"(([^\t: ]+)(:))*([^\n\t ]+)\")</string>
		</dict>
		<key>foreign_import_block</key>
		<dict>
			<key>begin</key>
			<string>(foreign)\s+(import)\s+(\w+)\s+({)+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.foreign.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.odin</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>3 = { name = 'entity.name.type.odin'; };</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>function_name_head</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.inline.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.proc.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)\s*(::)\s*(inline\s*)*(proc)</string>
		</dict>
		<key>import</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.double_point.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(import)\s+(\"((\w+)\s*:\s*)*([^\n ]+)\")</string>
		</dict>
		<key>keywords</key>
		<dict>
			<key>match</key>
			<string>\b(return|do|if|defer|in|export|when|for|switch|notin|inline|no_inline|size_of|align_of|type_of|break|case|continue|fallthrough)\b</string>
			<key>name</key>
			<string>keyword.control.odin</string>
		</dict>
		<key>len</key>
		<dict>
			<key>match</key>
			<string>len</string>
			<key>name</key>
			<string>support.function.string_len.odin</string>
		</dict>
		<key>math_operator</key>
		<dict>
			<key>match</key>
			<string>(\+|\-|/|\*|=)(?!(=|\+|\-|/|\*))</string>
			<key>name</key>
			<string>keyword.operator.math.odin</string>
		</dict>
		<key>modifier</key>
		<dict>
			<key>begin</key>
			<string>\@\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>keyword.other.attribute.odin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifier_link_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_link_prefix</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_calling_convention</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_private</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_c</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.call.c.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(c|cdecl)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_contextless</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.contextless.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(contextless)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_fast</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.call.fast.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(fast|fastcall)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_invalid_one</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.call.invalid.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(.*)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_odin</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.call.odin.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(odin)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_call_std</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.call.stdcall.odin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.odin</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(default_calling_convention)[\t ]*\=[\t ]*(\"(std|stdcall)\")</string>
				</dict>
			</array>
		</dict>
		<key>modifier_calling_convention</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifier_call_odin</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_call_contextless</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_call_std</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_call_c</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_call_fast</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifier_call_invalid_one</string>
				</dict>
			</array>
		</dict>
		<key>modifier_link_name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.link.name.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(link_name)\s*=\s*(\"(.*)\")</string>
		</dict>
		<key>modifier_link_prefix</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.link.prefix.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(link_prefix)\s*\=\s*(\"(.*)\")</string>
		</dict>
		<key>modifier_private</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>private</string>
					<key>name</key>
					<string>storage.modifier.call.c.odin</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#number_octal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number_hex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number_decimal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number_duodezimal</string>
				</dict>
			</array>
		</dict>
		<key>number_decimal</key>
		<dict>
			<key>match</key>
			<string>\b(([1-9]+[0-9]*)|(0))\b</string>
			<key>name</key>
			<string>constant.numeric.odin</string>
		</dict>
		<key>number_duodezimal</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.odin</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.doz.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(0(z)[0-9XE]*)\b</string>
		</dict>
		<key>number_hex</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.odin</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.hex.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(0(x)[0-9A-Fa-f]*)\b</string>
		</dict>
		<key>number_octal</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.odin</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.hex.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(0(o)[0-8]+)\b</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>match</key>
			<string>(:=|\+=|-=|\/=|\*=|&lt;=|==|\!=|&amp;|&amp;&amp;|\|\||\||\~|\^)</string>
			<key>name</key>
			<string>keyword.operator.same.odin</string>
		</dict>
		<key>package</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.package.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.scolon.odin</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>2 = { name = 'entity.name.section.package.odin'; };</string>
			<key>match</key>
			<string>(package)\s+(\w+)(;)*</string>
		</dict>
		<key>return_type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#basic_return_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#advnc_return_type</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.constant.odin</string>
		</dict>
		<key>string_char</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.constant.odin</string>
		</dict>
		<key>struct</key>
		<dict>
			<key>begin</key>
			<string>((\w+))\s*(::)\s*(struct)\s*(\#packed\s*)*({)*</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.struct.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.packed.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.struct.odin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}(;)*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field_and_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field</string>
				</dict>
			</array>
		</dict>
		<key>triple_slash_operator</key>
		<dict>
			<key>match</key>
			<string>([-]{3})</string>
			<key>name</key>
			<string>keyword.other.odin</string>
		</dict>
		<key>union</key>
		<dict>
			<key>begin</key>
			<string>((\w+))\s*(::)\s*(union)\s*(\#raw_union\s+)*{</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.struct.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bound.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.packed.odin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.struct.odin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}(;)*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field_and_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field</string>
				</dict>
			</array>
		</dict>
		<key>using</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.using.odin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.package.odin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.scolon.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(using)([\n ]+)([^\n ]+)(;)</string>
		</dict>
		<key>variable</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.decl.odin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.decl.odin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.odin</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.pointer.odin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(((\w+)\s*,\s*)*(\w+)\s*)(:)\s*((\^)*\w+)</string>
		</dict>
	</dict>
	<key>scope</key>
	<string>#!/bin/odin</string>
	<key>scopeName</key>
	<string>source.odin</string>
	<key>uuid</key>
	<string>4322CF02-7DA9-428D-8DFA-27BC99B53BFB</string>
</dict>
</plist>
